// Author:   Fenriswolf
// Version:  V1.0 2017.06.25 17:30 RELEASEVERSION

#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <MQ135.h>

#define photocell A0
#define k1 8
#define k2 9

LiquidCrystal_I2C lcd(0x27,20,4);
DHT dht(A1, DHT22);
MQ135 co2 = MQ135 (A2);

float phcValue;
boolean light;
float humid;
float temp;
float ppmValue;
boolean relayK1;
boolean relayK2;

void setup() {
  Serial.begin(9600); 
  lcd.init();
  pinMode(k1, OUTPUT);
  pinMode(k2, OUTPUT);
}

void readout() {
  if (isnan(temp) || isnan(humid)) {
    lcd.setCursor(0,0);
    lcd.print("SENSORERROR => DHT22");
    lcd.setCursor(0,1);
    lcd.print("                    ");
  }
  else {
    lcd.setCursor(0,0);
    lcd.print("Temperature  " + (String)temp + " C");
    lcd.setCursor(0,1);
    lcd.print("Humidity     " + (String)humid + " %");
  }
  if(isnan(ppmValue) || ppmValue > 30000) {
    lcd.setCursor(0,2);
    lcd.print("SENSORERROR => MQ135");
  }
  else {
    lcd.setCursor(0,2);
    lcd.print("CO2              ppm");
    lcd.setCursor(8,2);
    lcd.print((String)ppmValue);
  }
  lcd.setCursor(0,3);
  lcd.print("CO2 GAS     Vent    ");
  lcd.setCursor(8,3);
  if(relayK1 == false) {
    lcd.print("OFF");
  }
  else {
    lcd.print("ON");
  }
  lcd.setCursor(17,3);
  if(relayK2 == false) {
    lcd.print("OFF");
  }
  else {
    lcd.print("ON");
  }
}

void lcdBacklight() {
  phcValue = analogRead(photocell);
  if(phcValue > 100) {
    light = true;
  }
  else if (phcValue < 100 || !isnan(phcValue)) {
    light = false;
  }
  if(light == true) {
    lcd.backlight();
  }
  else
  {
    lcd.noBacklight();
  }
}

void TempHumid() {
  humid = dht.readHumidity();
  temp = dht.readTemperature();
}

void co2Measurement() {
  ppmValue = co2.getPPM();
}

void relais() {
  if(ppmValue >= 1200 || isnan(ppmValue)) {
    relayK1 = false; 
    digitalWrite(k1, HIGH);
  }
  else if(ppmValue > 0 && ppmValue < 650) {
    relayK1 = true;
    digitalWrite(k1, LOW);
  }
  if(temp >= 27 || ppmValue >= 4000 && ppmValue < 30000) {
    relayK2 = true;
    digitalWrite(k2, LOW);
  }
  else if(temp < 27 || isnan(temp) || ppmValue < 4000) {
    relayK2 = false;
    digitalWrite(k2, HIGH);
  }
}

void loop()
{
  lcdBacklight();
  TempHumid();
  co2Measurement();
  relais();
  readout();
  delay(30000);
}
