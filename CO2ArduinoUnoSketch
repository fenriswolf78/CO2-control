/*
Code for:
<<=========================>>
Standard photocell => used PIN A0
  PIN 1  connect to VCC 5V
  PIN 2 connect to DATA Port + 10kOhm resistor to GND port
<<=========================>>
measurement for DHT22 Sensor => used PIN A1, GND, VCC 5V
Output signal:    single bus
measuring range:  humidity 0-100% (+-2%)
                  temperature -40°C - 80°C (-+0.2°C)
sensing period:   ~ 2 seconds
Pins on module from left 
  PIN 1   connect to VCC port from 3.3-6.0VDC
  PIN 2   connect to DATA port + 1kOhm resistor to VCC port
  PIN 3   NULL
  PIN 4   connect to GND port
<<=========================>>
the 4 lines 20 cols LCD Display from Sunfounder.com => used PIN A4(SDA), PIN A5(SDC), GND, VCC 5V
Pins on module from upon
  PIN 1   GND
  PIN 2   VCC 5.0 VDC (-+0.1)
  PIN 3   SDA (data line)
  PIN 4   SDC (clock line)
<<=========================>>
messurement for MQ135 Sensor with backup fuction => used PIN A2, GND, VCC 5V
Output signal:    analog or digital bus
measuring range:  10 - 2000ppm
!!IMPORTANT 24 hours preheat time
sensing period:   ~ 2 seconds
Pins on module from left 
  PIN 1   VCC 5.0 VDC (-+0.1)
  PIN 2   GND
  PIN 3   Digital DATA
  PIN 4   Analog DATA (we use that)
<<=========================>>
2x 5 V DC to 230V AC relais 
Neuftech 2-CH 5V !! IMPORTANT low input = high output and vice versa !!
used PIN 8, PIN 9, GND, VCC 5V 
input signal: digital
!! IMPORTANT MAX 10 AMPS on 230V side allowed !!
<<=========================>>
Author:   Fenriswolf
Version:  V0.9 2017.06.24 18:06 TESTVERSION
<<=========================>>
*/

// <<=== initalize library ===>>
#include <Adafruit_Sensor.h> //Adafruit_Sensor-master.zip
#include <DHT.h> //DHT22-04.zip
#include <Wire.h> //I2C library
#include <LiquidCrystal_I2C.h> //LCD library
#include <MQ135.h> //gas sensor library

// <<=== define readpin and module ===>>
#define photocell A0 //rename digital pin 7 to photocell
#define k1 8 //relais1 magnetic valve rename digital pin 6 to k1
#define k2 9 //relais2 ventilation rename digital pin 6 to k2

// <<=== rename module to ===>>
LiquidCrystal_I2C lcd(0x27,20,4); //set the LCD address to 0x27 for a 20 chars and 4 line display
DHT dht(A1, DHT22); //set DHT22 name pin and type
MQ135 co2 = MQ135 (A2); //set name for mq135-module to co2

// <<=== variables ===>>
float phcValue; //define photocell
boolean light; //define first value for light on or off
float humid; //initalize humidity measurement
float temp; //initalize temperature measurement
float ppmValue; //initalize ppm measurement
boolean relayK1; //relay1 magnetic valve
boolean relayK2; //relay2 ventilation

void setup()
{
  Serial.begin(9600); 
  lcd.init(); //initialize the lcd
  pinMode(k1, OUTPUT); //define relay 1 PIN as output
  pinMode(k2, OUTPUT); //define relay 1 PIN as output
}

void readout()
{
  lcd.clear(); 
  if (isnan(temp) || isnan(humid)) //code for display sensorerror
  {
    lcd.setCursor(0,0);
    lcd.print("Sensorerror => DHT22");
    lcd.setCursor(0,1);
    lcd.print(" no data avaliable  ");
    
  }
  else
  {
    lcd.setCursor(0,0); 
    lcd.print("Temperature  " + (String)temp + " C");
    lcd.setCursor(0,1);
    lcd.print("Humidity     " + (String)humid + " %");
    /*!!! following code only for test in serial monitor!!!
      Serial.print("Humidity:  + (String)humid + " %t");
      Serial.print("Temperature: " + (String)temp1+temp2 + " °C");
    */
  }
  lcd.setCursor(0,2);
  lcd.print("CO2            ");
  lcd.setCursor(8,2);
  lcd.print((String)ppmValue + " ppm ");
  lcd.setCursor(0,3);
  lcd.print("                    "); //clear line4
  lcd.setCursor(0,3);
  lcd.print("CO2 GAS ");
  lcd.setCursor(8,3);
  if(relayK1 == false)
  {
    lcd.print("OFF");
  }
  else
  {
    lcd.print("ON");
  }
  lcd.setCursor(12,3);
  lcd.print("Vent");
  lcd.setCursor(17,3);
  if(relayK2 == false)
  {
    lcd.print("OFF");
  }
  else
  {
    lcd.print("ON");
  }
}

void lcdBacklight() //code for LCD Display backlight on or off
{
  phcValue = analogRead(photocell);
  if (!isnan(phcValue))
  {
    if(phcValue > 100)
    {
      light = true;
    }
    else
    {
      light = false;
    }
  }
  else
  {
    light = false;
  }
  if(light == true)
  {
    lcd.backlight();
  }
  else
  {
    lcd.noBacklight();
  }
}

void tempHumid()
{
  humid = dht.readHumidity();//set value for humidity on humid
  temp = dht.readTemperature();//set value for temperature on temp
}

void co2()
{
  ppmValue1 = co2_1.getPPM();
  ppmValue2 = co2_2.getPPM();
  ppmValue = (ppmValue1 + ppmValue2)/2;
  if(ppmValue1 >= ppmValue2*0.95 || ppmValue1 <= ppmValue2*1.05)
  {
    line2();
    line3();
    
  }
}

void relayK1Active()
{
  if(ppmValue >= 1950 || isnan(ppmValue)|| temp >= 60)
  {
    relayK1 = false;
    relayK2 = true;

  }
  else if(ppmValue <= 400 && temp <= 40)
  {
    relayK1 = true;
    relayK2 = false;
    
  }
  else if(ppmValue >= 900 && temp <= 40)
  {
    relayK1 = false;
    relayK2 = false;
    
  }
}
/*
  !!! following code only for test in serial monitor!!!
  Serial.print(ppmValue);
  Serial.print("ppm DANGER  valve:   ");
  Serial.println("OFF");*/
/*
  !!! following code only for test in serial monitor!!!
  Serial.print("Sensorerror => DHT22 no data avaliable  ");
/*
/*
  !!! following code only for test in serial monitor!!!
  Serial.print(ppmValue);
  Serial.print("°C   valve:   ");
  Serial.println("OFF");
*/
/*
  !!! following code only for test in serial monitor!!!
  Serial.print("Humidity:  + (String)humid + " %t");
  Serial.print("Temperature: " + (String)temp1+temp2 + " °C");
*/
/*
  !!! following code only for test in serial monitor!!!
  Serial.print("CO2_1: " + (String)ppmValue1);
  Serial.print(" CO2mix: ");
  delay(2000);
/*
/*
  !!! following code only for test in serial monitor!!!
  Serial.print(ppmValue);
  Serial.print("ppm   valve:   ");
  Serial.println("ON");
*/
/*
  !!! following code only for test in serial monitor!!!
  Serial.print(temp);
  Serial.print("°C temp too high  valve:   ");
  Serial.println("ON");
*/
/*
  !!! following code only for test in serial monitor!!!
  Serial.print(temp);
  Serial.print("°C   valve:   ");
  Serial.println("OFF");
*/
/*
  !!! following code only for test in serial monitor!!!
  Serial.print(ppmValue + "ppm   valve:   " + "OFF");
*/
/*
  !!! following code only for test in serial monitor!!!
  Serial.print("Humidity:  + (String)humid + " %t");
  Serial.print("Temperature: " + (String)temp1+temp2 + " °C");
*/
/*
  !!! following code only for test in serial monitor!!!
  Serial.print("CO2: " + (String)ppmValue);
  delay(2000);
/*
